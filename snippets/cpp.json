{
  "def print": {
    "prefix": "defprint",
    "body": [
      "void print(){}",
      "template<typename T, typename...Args>",
      "void print(T&& t, Args&&...args){",
      "    std::cout << t << \";\";",
      "    print(std::forward<Args>(args)...);",
      "}"
    ]
  },
  "include guard": {
    "prefix": "hdrgu",
    "description": "Adds an ifndef include guard to a C/C++ header",
    "body": [
      "#ifndef ${RELATIVE_FILEPATH/(?:^.*src[\\\\|\\/])?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}",
      "#define ${RELATIVE_FILEPATH/(?:^.*src[\\\\|\\/])?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}",
      "$0",
      "#endif  // ${RELATIVE_FILEPATH/(?:^.*src[\\\\|\\/])?(\\w+)(?!\\w*$)|(\\W)|(\\w+)$/${1:/upcase}${2:+_}${3:/upcase}${3:+_}/g}"
    ]
  }
}
